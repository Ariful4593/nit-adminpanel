[{"F:\\Web Development\\Project\\online-identify\\src\\index.js":"1","F:\\Web Development\\Project\\online-identify\\src\\reportWebVitals.js":"2","F:\\Web Development\\Project\\online-identify\\src\\App.js":"3","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\AdminPanel\\AdminPanel.js":"4","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Navbar\\Navbar.js":"5","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\StudentTable\\StudentTable.js":"6","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\Admin.js":"7","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\EarningsExpenses\\EarningsExpenses.js":"8","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\Student\\Student.js":"9","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\WebTraffic\\WebTraffic.js":"10","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\WebTraffic\\Notice.js":"11","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\FollowUs\\FollowUs.js":"12","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\Copyright\\Copyright.js":"13","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\SingleStudent\\SingleStudent.js":"14","F:\\Web Development\\Project\\online-identify\\src\\fakeData\\columns.js":"15","F:\\Web Development\\Project\\online-identify\\src\\fakeData\\rows.js":"16","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\AddNewStudentForm\\AddNewStudentForm.js":"17","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\AddNewTeacher\\AddNewTeacher.js":"18","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\Teacher\\AllTeachers.js":"19","F:\\Web Development\\Project\\online-identify\\src\\fakeData\\Teachers\\TeachersColumn.js":"20","F:\\Web Development\\Project\\online-identify\\src\\fakeData\\Teachers\\TeachersRow.js":"21","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\Notice\\NoticeBoard.js":"22","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Login\\Login.js":"23","F:\\Web Development\\Project\\online-identify\\src\\component\\PrivateRoute\\PrivateRoute.js":"24","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\AllStudent\\AllStudent.js":"25","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\SingleTeachers\\SingleTeachers.js":"26","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\AttendencePage\\AttendencePage.js":"27","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\AttendencePage\\AttendenceTable.js":"28"},{"size":629,"mtime":1606797849841,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":1236,"mtime":1607753453474,"results":"32","hashOfConfig":"30"},{"size":9301,"mtime":1607871874022,"results":"33","hashOfConfig":"30"},{"size":8251,"mtime":1607611510837,"results":"34","hashOfConfig":"30"},{"size":6321,"mtime":1607830474765,"results":"35","hashOfConfig":"30"},{"size":1932,"mtime":1607663615214,"results":"36","hashOfConfig":"30"},{"size":4367,"mtime":1606888149350,"results":"37","hashOfConfig":"30"},{"size":2595,"mtime":1607139786237,"results":"38","hashOfConfig":"30"},{"size":2479,"mtime":1606887224187,"results":"39","hashOfConfig":"30"},{"size":9575,"mtime":1607664754963,"results":"40","hashOfConfig":"30"},{"size":1339,"mtime":1606887769978,"results":"41","hashOfConfig":"30"},{"size":270,"mtime":1606887942615,"results":"42","hashOfConfig":"30"},{"size":6808,"mtime":1607753663416,"results":"43","hashOfConfig":"30"},{"size":1274,"mtime":1607690041978,"results":"44","hashOfConfig":"30"},{"size":4882,"mtime":1606916644553,"results":"45","hashOfConfig":"30"},{"size":15040,"mtime":1607693397993,"results":"46","hashOfConfig":"30"},{"size":12620,"mtime":1607751544175,"results":"47","hashOfConfig":"30"},{"size":6303,"mtime":1607754408750,"results":"48","hashOfConfig":"30"},{"size":1435,"mtime":1607752616838,"results":"49","hashOfConfig":"30"},{"size":4900,"mtime":1606991388562,"results":"50","hashOfConfig":"30"},{"size":3855,"mtime":1607664739185,"results":"51","hashOfConfig":"30"},{"size":5485,"mtime":1607694879218,"results":"52","hashOfConfig":"30"},{"size":809,"mtime":1607696308738,"results":"53","hashOfConfig":"30"},{"size":6086,"mtime":1607745276355,"results":"54","hashOfConfig":"30"},{"size":5284,"mtime":1607754286294,"results":"55","hashOfConfig":"30"},{"size":5375,"mtime":1607872414082,"results":"56","hashOfConfig":"30"},{"size":10215,"mtime":1607874427406,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"b72xoa",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Web Development\\Project\\online-identify\\src\\index.js",[],["122","123"],"F:\\Web Development\\Project\\online-identify\\src\\reportWebVitals.js",[],"F:\\Web Development\\Project\\online-identify\\src\\App.js",[],"F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\AdminPanel\\AdminPanel.js",[],"F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Navbar\\Navbar.js",["124"],"import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUniversity } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n}));\r\nconst Navbar = () => {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                    <Badge badgeContent={4} color=\"secondary\">\r\n                        <MailIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Messages</p>\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                    <Badge badgeContent={11} color=\"secondary\">\r\n                        <NotificationsIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Notifications</p>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleProfileMenuOpen}>\r\n                <IconButton\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <AccountCircle />\r\n                </IconButton>\r\n                <p>Profile</p>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n    return (\r\n        <div className={classes.grow}>\r\n\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        <FontAwesomeIcon icon={faUniversity} /> National Institute of Technology\r\n                    </Typography>\r\n\r\n                    <div className={classes.search}>\r\n                        {/* <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div> */}\r\n                        <InputBase\r\n                            placeholder=\"Search…\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionDesktop}>\r\n                        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                            <Badge badgeContent={4} color=\"secondary\">\r\n                                <MailIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n                            <Badge badgeContent={17} color=\"secondary\">\r\n                                <NotificationsIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-controls={mobileMenuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMobileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MoreIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\StudentTable\\StudentTable.js",["125"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Link } from \"react-router-dom\";\r\nimport columns from '../../../fakeData/columns';\r\nimport rows from '../../../fakeData/rows';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: 765,\r\n    },\r\n});\r\nconst StudentTable = () => {\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    \r\n    const studentData = JSON.parse(sessionStorage.getItem('studentInfo'))\r\n    // Color formatting...\r\n    // function setColor(p) {\r\n    //     var red = p < 50 ? 255 : Math.round(256 - (p - 50) * 5.12);\r\n    //     var green = p > 50 ? 255 : Math.round((p) * 5.12);\r\n    //     return \"rgb(\" + red + \",\" + green + \",0)\";\r\n    // }\r\n    return (\r\n\r\n        <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns.map((column) => (\r\n                                <TableCell\r\n                                    key={column.id}\r\n                                    align={column.align}\r\n                                    style={{ minWidth: column.minWidth, fontWeight: 'bold' }}\r\n                                >\r\n                                    {column.label}\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {studentData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                            return (\r\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row._id}>\r\n                                    {/* {columns.map((column) => {\r\n                                        const value = row[column.id];\r\n                                        console.log(row);\r\n\r\n                                        return (\r\n                                            <TableCell key={column.id} align={column.align}>\r\n                                                {value}\r\n                                            </TableCell>\r\n                                        );\r\n                                    })\r\n                                    } */}\r\n                                    <TableCell style={{ padding: '5px' }} >\r\n                                        <p className=\"m-0 ml-2\">{row.roll}</p>\r\n                                    </TableCell>\r\n                                    <TableCell className=\" text-center\" style={{ padding: '5px' }} >\r\n                                        <img className=\"\" style={{ height: '35px', borderRadius: '20px' }} src={`data:image/png;base64,${row.image.img}`} alt=\"\" />\r\n                                    </TableCell>\r\n                                    <TableCell style={{ padding: '5px' }} >\r\n                                        <Link to={`/info/${row.roll}`}><p className=\"m-0\">{`${row.first} ${row.last}`}</p></Link>\r\n\r\n                                    </TableCell>\r\n                                    <TableCell style={{ padding: '5px' }} >\r\n                                        <p className=\"m-0  text-center\">{row.gender}</p>\r\n                                    </TableCell>\r\n                                    <TableCell style={{ padding: '5px' }} >\r\n                                        <p className=\"m-0 text-center\">{row.department}</p>\r\n                                    </TableCell>\r\n                                    <TableCell style={{ padding: '5px' }} >\r\n                                        <p className=\"m-0 text-center\">{row.section}</p>\r\n                                    </TableCell>\r\n                                    <TableCell style={{ padding: '5px' }} >\r\n                                        <p className=\"m-0 text-center\">{row.admissionId}</p>\r\n                                    </TableCell>\r\n                                    <TableCell style={{ padding: '5px' }} >\r\n                                        <p className=\"m-0 text-center\">{row.religion}</p>\r\n                                    </TableCell>\r\n                                    <TableCell style={{ padding: '5px' }} >\r\n                                        <p className=\"m-0  text-center\">{row.dob}</p>\r\n                                    </TableCell>\r\n                                    <TableCell style={{ padding: '5px' }} >\r\n                                        <p className=\"m-0 text-center\">{row.phone}</p>\r\n                                    </TableCell>\r\n                                    <TableCell style={{ padding: '5px' }} >\r\n                                        <p className=\"m-0 text-center\">{row.email}</p>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component=\"div\"\r\n                count={studentData.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default StudentTable;","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\Admin.js",[],"F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\EarningsExpenses\\EarningsExpenses.js",[],"F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\Student\\Student.js",[],"F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\WebTraffic\\WebTraffic.js",[],"F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\WebTraffic\\Notice.js",[],"F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\FollowUs\\FollowUs.js",[],"F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\Copyright\\Copyright.js",[],"F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\SingleStudent\\SingleStudent.js",[],"F:\\Web Development\\Project\\online-identify\\src\\fakeData\\columns.js",[],"F:\\Web Development\\Project\\online-identify\\src\\fakeData\\rows.js",[],"F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\AddNewStudentForm\\AddNewStudentForm.js",["126"],"import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport './AddNewStudentForm.css'\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: '100%',\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\nconst AddNewStudentForm = () => {\r\n    const classes = useStyles();\r\n    const [admissionDate, setAdmissionDate] = useState({\r\n        day: new Date(),\r\n    })\r\n    const [formField, setFormField] = useState({\r\n        first: '',\r\n        last: '',\r\n        gender: '',\r\n        dob: '',\r\n        fName: '',\r\n        mName: '',\r\n        fOccuption: '',\r\n        religion: '',\r\n        blood: '',\r\n        address: '', \r\n        phone: '',       \r\n        email: '',\r\n        roll: '',        \r\n        department: '',\r\n        section: '',\r\n        admission: '',\r\n        admissionDate: admissionDate.day.toLocaleString(),\r\n        description: '',\r\n    })\r\n    const [file, setFile] = useState(null)\r\n    const handleFileChange = (e) => {\r\n        const newFile = e.target.files[0];\r\n        setFile(newFile)\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        let isFieldValid = true;\r\n        if (event.target.value === 'first') {\r\n            isFieldValid = event.target.value\r\n        }\r\n        if (event.target.value === 'last') {\r\n            isFieldValid = event.target.value\r\n        }\r\n        if (event.target.value === 'gender') {\r\n            isFieldValid = event.target.value\r\n        }\r\n        if (event.target.value === 'dob') {\r\n            isFieldValid = event.target.value\r\n        }\r\n        if (event.target.value === 'fName') {\r\n            isFieldValid = event.target.value\r\n        }\r\n        if (event.target.value === 'mName') {\r\n            isFieldValid = event.target.value\r\n        }\r\n        if (event.target.value === 'fOccuption') {\r\n            isFieldValid = event.target.value\r\n        }\r\n        if (event.target.value === 'address') {\r\n            isFieldValid = event.target.value\r\n        }\r\n        if (event.target.value === 'roll') {\r\n            isFieldValid = event.target.value\r\n        }\r\n        if (event.target.value === 'blood') {\r\n            isFieldValid = event.target.value\r\n        }\r\n        if (event.target.value === 'religion') {\r\n            isFieldValid = event.target.value\r\n        }\r\n        if(event.target.value === 'email'){\r\n            isFieldValid = event.target.value;\r\n        }\r\n        if (event.target.value === 'department') {\r\n            isFieldValid = event.target.value\r\n        }\r\n        if (event.target.value === 'section') {\r\n            isFieldValid = event.target.value\r\n        }\r\n        if (event.target.value === 'admission') {\r\n            isFieldValid = event.target.value\r\n        }\r\n        if (event.target.value === 'phone') {\r\n            isFieldValid = event.target.value\r\n        }\r\n        if (event.target.value === 'description') {\r\n            isFieldValid = event.target.value\r\n        }\r\n        if (isFieldValid) {\r\n            const newForm = { ...formField };\r\n            newForm[event.target.name] = event.target.value;\r\n            setFormField(newForm)\r\n        }\r\n    };\r\n    const handleSubmit = (e) => {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('first', formField.first)\r\n        formData.append('last', formField.last)\r\n        formData.append('gender', formField.gender)\r\n        formData.append('dob', formField.dob)\r\n        formData.append('fName', formField.fName)\r\n        formData.append('mName', formField.mName)\r\n        formData.append('fOccuption', formField.fOccuption)\r\n        formData.append('religion', formField.religion)\r\n        formData.append('blood', formField.blood)\r\n        formData.append('address', formField.address)\r\n        formData.append('phone', formField.phone)\r\n        formData.append('email', formField.email)\r\n        formData.append('roll', formField.roll)        \r\n        formData.append('department', formField.department)\r\n        formData.append('section', formField.section)\r\n        formData.append('admissionId', formField.admission)\r\n        formData.append('admissionDate', formField.admissionDate)\r\n        formData.append('description', formField.description)\r\n        fetch('https://secret-headland-48345.herokuapp.com/studentRegister', {\r\n            method: 'POST',\r\n            body: formData,\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                alert(\"Data Inserted!\")\r\n            })\r\n        document.getElementById('form').reset();\r\n        e.preventDefault()\r\n\r\n    }\r\n    function myFunction() {\r\n        document.getElementById('form').reset();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h2>Add New Student</h2>\r\n            <form id=\"form\" className={classes.root} noValidate autoComplete=\"off\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3 mt-4 pr-0\">\r\n                        <TextField className=\"w-100\" type=\"text\" onBlur={handleChange} name=\"first\" required id=\"outlined-required\" variant=\"outlined\" label=\"First Name\" />\r\n                    </div>\r\n                    <div className=\"col-md-3 mt-4 pr-0\">\r\n                        <TextField className=\"w-100\" type=\"text\" onBlur={handleChange} name=\"last\" required id=\"outlined-required\" variant=\"outlined\" label=\"Last Name\" />\r\n                    </div>\r\n                    <div className=\"col-md-3 mt-4 pr-0\">\r\n                        <FormControl id=\"outlined-basic\" variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel style={{ marginTop: '7px' }} id=\"demo-simple-select-label\">Gender*</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                // value={gender}\r\n                                required\r\n                                onBlur={handleChange}\r\n                                name=\"gender\"\r\n                                onChange={handleChange}\r\n                            >\r\n                                <MenuItem value=\"Male\">Male</MenuItem>\r\n                                <MenuItem value=\"Female\">Female</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                    </div>\r\n                    <div className=\"col-md-3 mt-4 pr-0\">\r\n                        <TextField className=\"w-100 h-100\" onBlur={handleChange} name=\"dob\" required id=\"outlined-required\" variant=\"outlined\" type=\"text\" label=\"Date of Birth\" />\r\n                    </div>\r\n                    <div className=\"col-md-3 mt-4 pr-0\">\r\n                        <TextField className=\"w-100 \" type=\"text\" onBlur={handleChange} name=\"fName\" required id=\"outlined-required\" variant=\"outlined\" label=\"Father Name\" />\r\n                    </div>\r\n                    <div className=\"col-md-3 mt-4 pr-0\">\r\n                        <TextField className=\"w-100 \" type=\"text\" onBlur={handleChange} name=\"mName\" required id=\"outlined-required\" variant=\"outlined\" label=\"Mother Name\" />\r\n                    </div>\r\n                    <div className=\"col-md-3 mt-4 pr-0\">\r\n                        <TextField className=\"w-100 \" type=\"text\" onBlur={handleChange} name=\"fOccuption\" required id=\"outlined-required\" variant=\"outlined\" label=\"Father Occuption\" />\r\n                    </div>\r\n                    <div className=\"col-md-3 mt-4 pr-0\">\r\n                        <FormControl id=\"outlined-basic\" variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel style={{ marginTop: '7px' }} id=\"demo-simple-select-label\">Religion*</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                // value={age}\r\n                                onBlur={handleChange}\r\n                                name=\"religion\"\r\n                                required\r\n                                onChange={handleChange}\r\n                            >\r\n                                <MenuItem value=\"Islam\">Islam</MenuItem>\r\n                                <MenuItem value=\"Hindu\">Hindu</MenuItem>\r\n                                <MenuItem value=\"Buddist\">Buddist</MenuItem>\r\n                                <MenuItem value=\"Christian\">Christian</MenuItem>\r\n                                <MenuItem value=\"Others\">Others</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"col-md-3 mt-4 pr-0\">\r\n                        <FormControl id=\"outlined-basic\" variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel style={{ marginTop: '7px' }} id=\"demo-simple-select-label\">Blood Group*</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                onBlur={handleChange}\r\n                                name=\"blood\"\r\n                                required\r\n                                onChange={handleChange}\r\n                            >\r\n                                <MenuItem value=\"A+\">A+</MenuItem>\r\n                                <MenuItem value=\"A-\">A-</MenuItem>\r\n                                <MenuItem value=\"B+\">B+</MenuItem>\r\n                                <MenuItem value=\"B-\">B-</MenuItem>\r\n                                <MenuItem value=\"O+\">O+</MenuItem>\r\n                                <MenuItem value=\"O-\">O-</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"col-md-3 mt-4 pr-0\">\r\n                        <TextField className=\"w-100 \" type=\"text\" onBlur={handleChange} name=\"address\" required id=\"outlined-required\" variant=\"outlined\" label=\"Address\" />\r\n                    </div>\r\n                    <div className=\"col-md-3 mt-4 pr-0\">\r\n                        <TextField className=\"w-100 \" type=\"text\" onBlur={handleChange} name=\"phone\" required id=\"outlined-required\" variant=\"outlined\" label=\"Phone\" />\r\n                    </div>\r\n                    <div className=\"col-md-3 mt-4 pr-0\">\r\n                        <TextField className=\"w-100 \" type=\"text\" onBlur={handleChange} name=\"email\" required id=\"outlined-required\" variant=\"outlined\" label=\"Email\" />                        \r\n                    </div>\r\n                    <div className=\"col-md-3 mt-4 pr-0\">\r\n                        <TextField className=\"w-100 \" type=\"text\" onBlur={handleChange} name=\"roll\" required id=\"outlined-required\" variant=\"outlined\" label=\"Roll\" />\r\n                    </div>\r\n                    <div className=\"col-md-3 mt-4 pr-0\">\r\n                        <FormControl id=\"outlined-basic\" variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel style={{ marginTop: '7px' }} id=\"demo-simple-select-label\">Department*</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                onBlur={handleChange}\r\n                                name=\"department\"\r\n                                required\r\n                                onChange={handleChange}\r\n                            >\r\n                                <MenuItem value=\"Computer\">Computer</MenuItem>\r\n                                <MenuItem value=\"Civil\">Civil</MenuItem>\r\n                                <MenuItem value=\"EEE\">EEE</MenuItem>\r\n                                <MenuItem value=\"Machanical\">Machanical</MenuItem>\r\n                                <MenuItem value=\"Textile\">Textile</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"col-md-3 mt-4 pr-0\">\r\n                        <FormControl id=\"outlined-basic\" variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel style={{ marginTop: '7px' }} id=\"demo-simple-select-label\">Section*</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                onBlur={handleChange}\r\n                                required\r\n                                name=\"section\"\r\n                                onChange={handleChange}\r\n                            >\r\n                                <MenuItem value=\"A\">A</MenuItem>\r\n                                <MenuItem value=\"B\">B</MenuItem>\r\n                                <MenuItem value=\"C\">C</MenuItem>\r\n                                <MenuItem value=\"D\">D</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"col-md-3 mt-4 pr-0\">\r\n                        <TextField className=\"w-100\" type=\"text\" onBlur={handleChange} name=\"admission\" required id=\"outlined-required\" variant=\"outlined\" label=\"Admission ID\" />\r\n                    </div>\r\n                    \r\n                    <div className=\"col-md-6 mt-4\">\r\n                        <TextareaAutosize aria-label=\"minimum height\" id=\"outlined-basic\" variant=\"outlined\" onBlur={handleChange} className=\"w-100\" name=\"description\" rowsMin={8} placeholder=\"Short BIO\" />\r\n                    </div>\r\n                    <div className=\"col-md-3 mt-4 pr-0\">\r\n                        <div className=\"form-group\">\r\n                            <label >Upload Photo</label>\r\n                            <input type=\"file\" onBlur={handleFileChange} className=\"form-control-file\" required id=\"outlined-required\" />\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row mt-2\">\r\n                    <button type=\"submit\" className=\"btn btn-light save text-white ml-3\" onClick={handleSubmit} >Save</button>\r\n                    <input type=\"reset\" className=\"btn btn-light reset text-white ml-3\" value=\"Reset\" onClick={myFunction} />\r\n                </div>\r\n            </form>\r\n            <p id=\"log\"></p>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddNewStudentForm;","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\AddNewTeacher\\AddNewTeacher.js",[],"F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\Teacher\\AllTeachers.js",[],"F:\\Web Development\\Project\\online-identify\\src\\fakeData\\Teachers\\TeachersColumn.js",[],"F:\\Web Development\\Project\\online-identify\\src\\fakeData\\Teachers\\TeachersRow.js",[],"F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\Notice\\NoticeBoard.js",["127"],"import { TextField } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\n\r\nimport './NoticeBoard.css';\r\nimport Notice from '../WebTraffic/Notice';\r\n// import Button from '@material-ui/core/Button';\r\n// import Snackbar from '@material-ui/core/Snackbar';\r\n// import MuiAlert from '@material-ui/lab/Alert';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n\r\n// function Alert(props) {\r\n//     return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n// }\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         width: '100%',\r\n//         '& > * + *': {\r\n//             marginTop: theme.spacing(2),\r\n//         },\r\n//     },\r\n// }));\r\nconst NoticeBoard = ({ category }) => {\r\n    const [today, setToday] = useState({\r\n        day: new Date(),\r\n    })\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        postedBy: 'Admin',\r\n        date: today.day.toLocaleString(),\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        const newForm = { ...formData };\r\n        newForm[e.target.name] = e.target.value;\r\n        setFormData(newForm)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        // sessionStorage.setItem('post', JSON.stringify([formData]))\r\n        fetch('https://secret-headland-48345.herokuapp.com/adminPost', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(formData)\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => console.log(data))\r\n            document.getElementById('noticeForm').reset()\r\n\r\n        e.preventDefault()\r\n        // window.location.replace(window.location.href.split('#')[0]);\r\n\r\n    }\r\n    // const classes = useStyles();\r\n    // const [open, setOpen] = React.useState(false);\r\n\r\n    // const handleClick = () => {\r\n    //     setOpen(true);\r\n    // };\r\n\r\n    // const handleClose = (event, reason) => {\r\n    //     if (reason === 'clickaway') {\r\n    //         return;\r\n    //     }\r\n\r\n    //     setOpen(false);\r\n    // };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h2>Create a Notice</h2>\r\n            <form id=\"noticeForm\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 mt-4\">\r\n                        <TextField className=\"w-100 h-100\" onBlur={handleChange} name=\"title\" id=\"outlined-basic\" variant=\"outlined\" label=\"Title\" />\r\n                    </div>\r\n                    <div className=\"col-md-3 mt-4\">\r\n                        <TextField className=\"w-100\" onBlur={handleChange} name=\"posted\" id=\"outlined-basic\" value=\"Admin\" variant=\"outlined\" label=\"Posted By\" />\r\n                    </div>\r\n                    <div className=\"col-md-3 mt-4\">\r\n                        <TextField className=\"w-100\" onBlur={handleChange} name=\"date\" id=\"outlined-basic\" value={today.day.toLocaleString()} variant=\"outlined\" label=\"Date\" />\r\n                    </div>\r\n                    <div className=\"col-md-12 mt-4\">\r\n                        <TextareaAutosize aria-label=\"minimum height\" id=\"outlined-basic\" variant=\"outlined\" onBlur={handleChange} className=\"w-100\" name=\"description\" rowsMin={8} placeholder=\"Post content goes here...\" />\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"row mt-2\">\r\n                    <input type=\"submit\" className=\"btn btn-light save text-white ml-3\" value=\"Save\" onClick={handleSubmit} />\r\n                    <input type=\"reset\" className=\"btn btn-light reset text-white ml-3\" value=\"Reset\" />\r\n                </div>\r\n            </form>\r\n            <div className=\"row mt-5\">\r\n                <Notice category={category} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NoticeBoard;","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Login\\Login.js",["128"],"import React, { useContext, useState } from 'react'\r\nimport { Link, useHistory\r\n } from 'react-router-dom'\r\nimport './Login.css'\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { UserContext } from '../../../App'\r\n\r\n\r\n\r\nconst Login = () => {\r\n    // For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n    const firebaseConfig = {\r\n        apiKey: \"AIzaSyBzUwfT2OlYveY3LTW-JMX7mvkGycWY9KI\",\r\n        authDomain: \"nit-adminpanel.firebaseapp.com\",\r\n        projectId: \"nit-adminpanel\",\r\n        storageBucket: \"nit-adminpanel.appspot.com\",\r\n        messagingSenderId: \"769704334138\",\r\n        appId: \"1:769704334138:web:87eec696d45a33ff443603\",\r\n        measurementId: \"G-8CCZ6PJXEX\"\r\n    };\r\n    if (!firebase.apps.length) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext)\r\n    const [user, setUser] = useState({\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n    })\r\n\r\n    const history = useHistory()\r\n\r\n    const handleBlur = (e) => {\r\n        let isFieldValid\r\n        if (e.target.name === 'email') {\r\n            // isFieldValid = /\\S+@\\S+\\.\\S+/.test(e.target.value)\r\n            isFieldValid = e.target.value\r\n        }\r\n        if (e.target.name === 'password') {\r\n            // isFieldValid = /^(?=(?:.*[A-Z]){1})(?=(?:.*[a-z]){1})(?=(?:.*[0-9]){1})\\S{6,20}$/.test(\r\n            //     e.target.value\r\n            // )\r\n            isFieldValid = e.target.value\r\n        }\r\n        if (isFieldValid) {\r\n            const newUserInfo = { ...user }\r\n            newUserInfo[e.target.name] = e.target.value\r\n            setUser(newUserInfo)\r\n        }\r\n    }\r\n    \r\n\r\n    const handleSubmit = (e) => {\r\n        if (user.email && user.password) {\r\n            firebase.auth().signInWithEmailAndPassword(user.email, user.password)\r\n                .then((userData) => {\r\n                    console.log(userData)\r\n                    const newUser = { ...user };\r\n                    newUser.error = '';\r\n                    setUser(newUser);\r\n                    setLoggedInUser(newUser)\r\n                    localStorage.setItem('user', JSON.stringify(newUser))\r\n                    history.push('/')\r\n\r\n                })\r\n                .catch((errorMessage) => {\r\n                    const newError = { ...user }\r\n                    newError.error = errorMessage.message;\r\n                    setUser(newError)\r\n                });\r\n        }\r\n        e.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <div className=\"mb-5\">\r\n            <div className='text-center'>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className='form-field p-4'>\r\n                        <p>\r\n                            <input\r\n                                className='mb-2'\r\n                                onBlur={handleBlur}\r\n                                type='email'\r\n                                name='email'\r\n                                placeholder='Username or Email'\r\n                                required\r\n                            />\r\n                        </p>\r\n                        <p>\r\n                            <input\r\n                                className='mb-2'\r\n                                onBlur={handleBlur}\r\n                                type='password'\r\n                                name='password'\r\n                                placeholder='Password'\r\n                                required\r\n                            />\r\n                        </p>\r\n\r\n                        <p className='text-left mb-2 px-3'>\r\n                            <input type='checkbox' name='checkbox' />\r\n                            <span className='ml-3'>Remember Me</span>\r\n                            <span className='float-right'>\r\n                                <Link to=\"\">Forgot Password</Link>\r\n                            </span>\r\n                        </p>\r\n                        <input\r\n                            className='mt-3'\r\n                            type='submit'\r\n                            value={'Login'}\r\n                        />\r\n                    </div>\r\n                </form>\r\n                <p>{user.error === '' ? '' : user.error}</p>\r\n                {/* <div>\r\n                    <p className='divider'></p>Or<p className='divider'></p>\r\n                </div>\r\n                <div className='mb-2 mt-3'>\r\n                    <button className='sign-btn' onClick={fbLogIn}>\r\n                        <img\r\n                            className='media-icon'\r\n                            src={googleIcon}\r\n                            alt='google icon'\r\n                        />\r\n                    Continue with Facebook\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <button className='sign-btn' >\r\n                        <img className='media-icon' src={facebookIcon} alt='google icon' />\r\n                    Continue with Google\r\n                    </button>\r\n                </div>\r\n                <p style={{ color: 'red' }}>{user.error}</p>\r\n                {user.success && (\r\n                    <p style={{ color: 'green' }}>\r\n                        you have successfully{' '}\r\n                        {newUser ? 'created a new account' : 'logged in'}\r\n                    </p>\r\n                )} */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login","F:\\Web Development\\Project\\online-identify\\src\\component\\PrivateRoute\\PrivateRoute.js",["129"],"import React from 'react';\r\nimport { useContext } from 'react';\r\nimport {\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { UserContext } from '../../App';\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext)\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n            (loggedInUser.email) ? (\r\n                    children\r\n                ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: location }\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\AllStudent\\AllStudent.js",["130","131"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Link } from \"react-router-dom\";\r\nimport columns from '../../../../fakeData/columns';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: 765,\r\n    },\r\n});\r\nconst AllStudent = () => {\r\n    const classes = useStyles();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    \r\n    const studentData = JSON.parse(sessionStorage.getItem('studentInfo'))\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns.map((column) => (\r\n                                <TableCell\r\n                                    key={column.id}\r\n                                    align={column.align}\r\n                                    style={{ minWidth: column.minWidth, fontWeight: 'bold' }}\r\n                                >\r\n                                    {column.label}\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {studentData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                            return (\r\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row._id}>\r\n                                    {/* {columns.map((column) => {\r\n                                        const value = row[column.id];\r\n                                        console.log(row);\r\n\r\n                                        return (\r\n                                            <TableCell key={column.id} align={column.align}>\r\n                                                {value}\r\n                                            </TableCell>\r\n                                        );\r\n                                    })\r\n                                    } */}\r\n                                    <TableCell style={{ padding: '5px' }} >\r\n                                        <p className=\"m-0 ml-2\">{row.roll}</p>\r\n                                    </TableCell>\r\n                                    <TableCell className=\" text-center\" style={{ padding: '5px' }} >\r\n                                        <img className=\"\" style={{ height: '35px', borderRadius: '20px' }} src={`data:image/png;base64,${row.image.img}`} alt=\"\" />\r\n                                    </TableCell>\r\n                                    <TableCell style={{ padding: '5px' }} >\r\n                                        <Link to={`/info/${row.roll}`}><p className=\"m-0\">{`${row.first} ${row.last}`}</p></Link>\r\n\r\n                                    </TableCell>\r\n                                    <TableCell style={{ padding: '5px' }} >\r\n                                        <p className=\"m-0  text-center\">{row.gender}</p>\r\n                                    </TableCell>\r\n                                    <TableCell style={{ padding: '5px' }} >\r\n                                        <p className=\"m-0 text-center\">{row.department}</p>\r\n                                    </TableCell>\r\n                                    <TableCell style={{ padding: '5px' }} >\r\n                                        <p className=\"m-0 text-center\">{row.section}</p>\r\n                                    </TableCell>\r\n                                    <TableCell style={{ padding: '5px' }} >\r\n                                        <p className=\"m-0 text-center\">{row.admissionId}</p>\r\n                                    </TableCell>\r\n                                    <TableCell style={{ padding: '5px' }} >\r\n                                        <p className=\"m-0 text-center\">{row.religion}</p>\r\n                                    </TableCell>\r\n                                    <TableCell style={{ padding: '5px' }} >\r\n                                        <p className=\"m-0  text-center\">{row.dob}</p>\r\n                                    </TableCell>\r\n                                    <TableCell style={{ padding: '5px' }} >\r\n                                        <p className=\"m-0 text-center\">{row.phone}</p>\r\n                                    </TableCell>\r\n                                    <TableCell style={{ padding: '5px' }} >\r\n                                        <p className=\"m-0 text-center\">{row.email}</p>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 100]}\r\n                component=\"div\"\r\n                count={studentData.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default AllStudent;","F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\SingleTeachers\\SingleTeachers.js",[],"F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\AttendencePage\\AttendencePage.js",["132","133"],"F:\\Web Development\\Project\\online-identify\\src\\component\\AdminPanel\\Page\\AttendencePage\\AttendenceTable.js",["134"],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":11,"column":8,"nodeType":"141","messageId":"142","endLine":11,"endColumn":18},{"ruleId":"139","severity":1,"message":"143","line":13,"column":8,"nodeType":"141","messageId":"142","endLine":13,"endColumn":12},{"ruleId":"139","severity":1,"message":"144","line":20,"column":27,"nodeType":"141","messageId":"142","endLine":20,"endColumn":43},{"ruleId":"139","severity":1,"message":"145","line":26,"column":19,"nodeType":"141","messageId":"142","endLine":26,"endColumn":27},{"ruleId":"139","severity":1,"message":"146","line":25,"column":12,"nodeType":"141","messageId":"142","endLine":25,"endColumn":24},{"ruleId":"139","severity":1,"message":"147","line":9,"column":26,"nodeType":"141","messageId":"142","endLine":9,"endColumn":41},{"ruleId":"139","severity":1,"message":"148","line":13,"column":10,"nodeType":"141","messageId":"142","endLine":13,"endColumn":19},{"ruleId":"139","severity":1,"message":"149","line":14,"column":10,"nodeType":"141","messageId":"142","endLine":14,"endColumn":18},{"ruleId":"139","severity":1,"message":"150","line":20,"column":12,"nodeType":"141","messageId":"142","endLine":20,"endColumn":22},{"ruleId":"151","severity":1,"message":"152","line":76,"column":8,"nodeType":"153","endLine":76,"endColumn":10,"suggestions":"154"},{"ruleId":"139","severity":1,"message":"155","line":5,"column":8,"nodeType":"141","messageId":"142","endLine":5,"endColumn":17},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'SearchIcon' is defined but never used.","Identifier","unusedVar","'rows' is defined but never used.","'setAdmissionDate' is assigned a value but never used.","'setToday' is assigned a value but never used.","'loggedInUser' is assigned a value but never used.","'setLoggedInUser' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'rollNumber' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'today' and 'userData'. Either include them or remove the dependency array.","ArrayExpression",["158"],"'TableBody' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},"Update the dependencies array to be: [today, userData]",{"range":"161","text":"162"},[2765,2767],"[today, userData]"]